// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// apply_ptsl_helper
DataFrame apply_ptsl_helper(NumericVector value, std::vector<std::string> date, std::vector<std::string> start, std::vector<std::string> end, NumericVector side, NumericVector lower, NumericVector upper);
RcppExport SEXP _finma_apply_ptsl_helper(SEXP valueSEXP, SEXP dateSEXP, SEXP startSEXP, SEXP endSEXP, SEXP sideSEXP, SEXP lowerSEXP, SEXP upperSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type value(valueSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type date(dateSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type start(startSEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type end(endSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type side(sideSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type upper(upperSEXP);
    rcpp_result_gen = Rcpp::wrap(apply_ptsl_helper(value, date, start, end, side, lower, upper));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_finma_apply_ptsl_helper", (DL_FUNC) &_finma_apply_ptsl_helper, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_finma(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
